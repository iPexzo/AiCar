const axios = require("axios");

const BASE_URL = "http://localhost:8001";

async function testSmartQuestions() {
  console.log("🧪 Testing Smart Follow-up Questions Generation\n");

  const testCases = [
    {
      name: "Toyota Camry Engine Noise",
      data: {
        carType: "Toyota",
        carModel: "Camry",
        mileage: "150000",
        problemDescription: "أسمع صوت طقطقة من المحرك عند التشغيل",
      },
    },
    {
      name: "Dodge Charger Transmission Issue",
      data: {
        carType: "Dodge",
        carModel: "Charger",
        mileage: "80000",
        problemDescription: "مشكلة في ناقل الحركة - لا ينتقل للترس الثالث",
      },
    },
    {
      name: "Nissan Altima Brake Problem",
      data: {
        carType: "Nissan",
        carModel: "Altima",
        mileage: "120000",
        problemDescription: "الفرامل لا تعمل بشكل جيد - تحتاج قوة أكبر للضغط",
      },
    },
  ];

  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    console.log(`\n📋 Test Case ${i + 1}: ${testCase.name}`);
    console.log("=".repeat(50));

    try {
      const response = await axios.post(
        `${BASE_URL}/api/analyze-guided`,
        testCase.data
      );

      if (response.data.success) {
        console.log("✅ Initial analysis successful");
        console.log("🔍 Generated Questions:");

        response.data.followUpQuestions.forEach((question, index) => {
          console.log(`  ${index + 1}. ${question.question}`);
        });

        console.log(`\n⏰ Timestamp: ${response.data.timestamp}`);
        console.log(
          `🆔 Session ID: ${
            response.data.followUpQuestions[0]?.timestamp || "N/A"
          }`
        );
      } else {
        console.log("❌ Failed to get analysis:", response.data.message);
      }
    } catch (error) {
      console.log("❌ Error:", error.response?.data?.message || error.message);
    }

    // Wait between tests to avoid rate limiting
    if (i < testCases.length - 1) {
      console.log("\n⏳ Waiting 2 seconds before next test...");
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }
  }

  console.log("\n\n🧪 Testing Additional Questions Generation");
  console.log("=".repeat(50));

  // Test additional questions generation
  try {
    const additionalQuestionsData = {
      carDetails: {
        carType: "Toyota",
        carModel: "Camry",
        mileage: "150000",
        lastServiceType: "تغيير الزيت",
      },
      problemDescription: "أسمع صوت طقطقة من المحرك عند التشغيل",
      previousQuestions: [
        { id: "1", question: "هل تسمع صوت طقطقة عند تشغيل المحرك؟" },
        { id: "2", question: "متى بدأت هذه المشكلة؟" },
        { id: "3", question: "هل تزداد المشكلة عند التسارع؟" },
      ],
      previousAnswers: [
        { id: "1", answer: "نعم، صوت طقطقة واضح" },
        { id: "2", answer: "منذ أسبوعين" },
        { id: "3", answer: "نعم، يزداد مع السرعة" },
      ],
    };

    const additionalResponse = await axios.post(
      `${BASE_URL}/api/generate-questions`,
      additionalQuestionsData
    );

    if (additionalResponse.data.success) {
      console.log("✅ Additional questions generated successfully");
      console.log("🔍 Additional Questions:");

      additionalResponse.data.questions.forEach((question, index) => {
        console.log(`  ${index + 1}. ${question.question}`);
      });

      console.log(`\n⏰ Timestamp: ${additionalResponse.data.timestamp}`);
      console.log(`📝 Note: ${additionalResponse.data.note}`);
    } else {
      console.log(
        "❌ Failed to generate additional questions:",
        additionalResponse.data.message
      );
    }
  } catch (error) {
    console.log(
      "❌ Error generating additional questions:",
      error.response?.data?.message || error.message
    );
  }

  console.log("\n\n🎯 Test Summary:");
  console.log("=".repeat(30));
  console.log("✅ Smart questions should be different for each car/problem");
  console.log("✅ Questions should include timestamps to prevent caching");
  console.log("✅ Additional questions should be based on previous answers");
  console.log("✅ No duplicate questions should be generated");
  console.log("✅ All questions should be in Arabic");
}

// Run the test
testSmartQuestions().catch(console.error);
